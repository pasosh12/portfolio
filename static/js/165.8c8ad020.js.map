{"version":3,"file":"static/js/165.8c8ad020.js","mappings":"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","sources":["../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js"],"sourcesContent":["import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n"],"names":["drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","width","height","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","data","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","container","particle","delta","colorStyles","backgroundMask","composite","radius","shadow","transform","pos","getPosition","angle","rotation","pathRotation","velocity","rotateData","Math","sin","cos","transformData","a","b","c","d","setTransform","globalCompositeOperation","shadowColor","enable","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","offset","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","get","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","color","type","value","h","s","l","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","key","hue2rgb","p","q","t","stringToRgba","input","_step","_iterator","_createForOfIteratorHelper","n","done","_slicedToArray","startsWith","stringPrefix","parseString","err","e","f","hexFixed","replace","_","r","g","undefined","result","exec","parseInt","rangeColorToRgb","index","useIndex","arguments","length","isString","colorToRgb","isArray","itemFromArray","_step2","_iterator2","res","handleRangeColor","getRandomRgbColor","stringToRgb","_step3","_iterator3","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","setRangeValue","concat","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","mix","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","getRangeValue","speed","decay","status","loops","maxLoops","count","time","delayTime","delay","sync","getRandom","initialValue","EventDispatcher","_classCallCheck","this","_listeners","_createClass","listener","removeEventListener","arr","push","args","listeners","forEach","handler","delete","idx","indexOf","splice","_random","random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","isNumber","source","getValue","options","_ref","isBoolean","minimumValue","getDistances","pointA","pointB","dx","dy","distance","sqrt","pow","getDistance","getParticleDirectionAngle","direction","position","center","PI","atan2","getParticleBaseVelocity","baseVelocity","Vector","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","size","parseAlpha","endsWith","parseFloat","loadOptions","_len","sourceOptionsArr","Array","_key","_i","_sourceOptionsArr","sourceOptions","load","loadParticlesOptions","engine","ParticlesOptions","_len2","_key2","apply","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","loadFont","_x","_x2","_loadFont","_asyncToGenerator","_regeneratorRuntime","mark","_callee","font","weight","wrap","_context","prev","next","fonts","t0","stop","arrayRandomIndex","isPointInside","point","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","sources","_sources","isObject","sourceIsArray","_loop","destDict","map","v","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","executeOnSingleOrMultiple","div","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","bounce","horizontal","vertical","circleBounce","_p1$velocity$sub","sub","xVelocityDiff","yVelocityDiff","pos1","pos2","_getDistances","xDist","yDist","u1","rotate","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","startValue","getPositionOrSize","positionOrSize","canvasSize","_objectWithoutProperties","_excluded","arg","isFunction","HslColorManager","_colorValue$hsl","_colorValue$hsl2","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","tsParticles","rgbColorManager","hslColorManager","Engine","init"],"sourceRoot":""}