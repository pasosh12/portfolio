{"version":3,"file":"static/js/549.69b0b870.js","mappings":"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","sources":["../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js"],"sourcesContent":["import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n"],"names":["loadBasic","_x","_loadBasic","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","engine","refresh","_args","wrap","_context","prev","next","length","undefined","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","stop","setTransformValue","factor","newFactor","key","_factor$key","newValue","Canvas","container","_this","_classCallCheck","this","_applyPostDrawUpdaters","particle","_step","_iterator","_createForOfIteratorHelper","_postDrawUpdaters","s","n","done","updater","value","afterDraw","err","e","f","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_step2","_iterator2","_preDrawUpdaters","getColorStyles","_updater$getColorStyl","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_step3","_iterator3","_resizePlugins","plugin","resize","_getPluginParticleColors","fColor","sColor","_step4","_iterator4","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","cover","actualOptions","backgroundMask","color","coverRgb","rangeColorToRgb","coverColor","_objectSpread","a","opacity","_coverColorStyle","getStyleFromRgb","_initStyle","element","options","_fullScreen","_originalStyle","deepExtend","style","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","trailFill","fillColor","_trail","particles","move","enable","abrupt","_trailFill","Promise","resolve","reject","image","img","document","createElement","addEventListener","evt","error","src","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","position","zIndex","top","left","width","height","callback","_mutationObserver","priority","fullScreen","toString","_generated","_createClass","get","_this2","paint","clear","remove","cb","delta","_particle$getStrokeCo","_this3","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_this$_getPluginParti","_this$_getPluginParti2","_slicedToArray","_ref2","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","Math","pow","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","getStyleFromHsl","drawParticle","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","_init","_callee2","_this4","_context2","obs","safeMutationObserver","records","_step5","_iterator5","record","type","attributeName","t0","getLogger","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_step6","_iterator6","plugins","push","_step7","_iterator7","updaters","canvas","_this5","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","init","_this6","pxRatio","pixelRatio","newSize","oldSize","started","resizeFactor","_this7","_windowResize","_callee3","needsRefresh","_context3","updateActualOptions","setDensity","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","windowResize","delay","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","_ref3","entries","target","resizeEvent","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","_i","_touches","Array","from","changedTouches","touch","delete","identifier","_touchEndClick","_i2","_touches2","_touchStart","_i3","_touches3","set","performance","now","Map","InteractionManager","_engine","_interactors","getInteractors","_externalInteractors","_particleInteractors","_externalInteract","interactor","isEnabled","interact","t1","finish","_particlesInteract","_interactor","_x2","_x3","_reset","_interactor2","reset","_x4","fixOutMode","data","isInArray","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","id","overrideOptions","group","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","Vector3d","canvasSize","exactPosition","calcExactPositionOrRandomFromSize","outModes","fixHorizontal","fixVertical","right","bottom","_checkOverlap","_calculateVelocity","res","getParticleBaseVelocity","direction","copy","moveOptions","rad","PI","getRangeValue","angle","radOffset","offset","range","straight","randomInRange","setRangeValue","random","speed","getRandom","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","concat","errorPrefix","getDistance","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","horizontal","vertical","backSum","floor","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","clamp","zLayers","initialPosition","moveCenter","getPosition","center","getParticleDirectionAngle","outType","Vector","_loadShapeData","shapeOptions","reduceDuplicates","shapeData","shape","close","itemFromSingleOrMultiple","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","_this$bubble$color","getHslFromAnimation","z","_this$bubble$radius","_this$bubble$color2","strokeColor","_shapeData$fill","_shapeData$close","_drawer","pathRotation","lastPathTime","rotation","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","loadParticlesOptions","shapeType","overrideShapeType","load","Interactivity","pathOptions","path","pathDelay","getValue","generator","getPathGenerator","addPath","initParticle","initParticleNumericAnimationValue","initialVelocity","velocity","moveDecay","decay","needsSort","lastZIndex","sides","drawer","drawers","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","shadowColor","movers","mover","particleInit","particleCreated","isInsideCanvas","_step8","_iterator8","Point","QuadTree","rectangle","capacity","_subdivide","_this$rectangle$posit","_this$rectangle$size","i","_subs","Rectangle","round","_divided","_points","point","contains","some","sub","insert","check","found","intersects","p","query","Circle","qTreeCapacity","qTreeRectangle","Particles","_applyDensity","manualCount","_options$number$densi","number","density","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","limit","particlesNumber","min","particlesCount","count","filter","t","abs","removeQuantity","densityOptions","_container","area","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","warning","_removeParticle","index","destroy","zIdx","indexOf","splice","_interactionManager","quadTree","getMovers","getUpdaters","manualParticles","addParticle","countToRemove","_draw","_step2$value","update","condition","particlesInitialization","pathGenerators","addManualParticles","groups","groupOptions","j","_groupOptions$number","nb","pushing","_redraw","removeAt","quantity","deleted","_update","particlesToDelete","_step6$value","_step7$value","_iterator10","_step10","_step10$value","_plugin","_iterator11","_step11","_this$pool","checkDelete","_iterator9","_step9","_particle","_iterator12","_step12","zArray","Set","particleUpdate","has","_toConsumableArray","externalInteract","particlesInteract","t2","sort","b","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","attractDistance","attract","distance","maxSpeed","gravity","sizeAnimationSpeed","animation","moveDistance","props","moveDrift","drift","moveSpeed","guardCheck","initDelta","loadContainerOptions","Options","_len","sourceOptionsArr","_key","loadOptions","defaultPathGenerator","generate","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","_ref","timestamp","_this$lastFrameTime","smooth","lastFrameTime","fpsLimit","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","el","clickOrTouchHandler","posRetina","queryCircle","touched","touchMoved","max","radiusX","radiusY","keys","mainArr","dom","idx","findIndex","force","refreshTime","_drawAnimationFrame","requestAnimationFrame","_export2","_step4$value","_args3","export","sent","supported","blob","_callee4","shapes","availablePlugins","_step8$value","_step9$value","_plugin2","_context4","getSupportedShapes","getAvailablePlugins","duration","t3","particlesSetup","_loadTheme","_callee5","_context5","_currentTheme","cancelAnimationFrame","needsUpdate","autoPlay","_refresh","_callee6","_context6","start","_callee7","_context7","noiseOrGenerator","setPath","pathOrGenerator","isFunction","oldGenerator","_start","_callee9","_context9","_delayTimeout","_callee8","_iterator13","_step13","_step13$value","_context8","addListeners","HTMLElement","removeListeners","_step14","_iterator14","_step15","_iterator15","responsive","newMaxWidth","setResponsive","setTheme","responsiveMaxWidth","getItemsFromInitializer","map","initializers","values","Plugins","_initializers","interactors","presets","initInteractor","initMover","initUpdater","getPlugin","presetKey","getPreset","types","needsPlugin","preset","getDataFromUrl","_getDataFromUrl","_callee15","url","response","_context15","fallback","fetch","ok","json","isParams","obj","params","Engine","_configs","_domArray","_eventDispatcher","EventDispatcher","_initialized","_step$value","config","nameOrConfig","_nameOrConfig$name","isString","listener","_addInteractor","interactorInitializer","addInteractor","_addMover","moverInitializer","_args2","addParticleMover","_x5","_addParticleUpdater","updaterInitializer","addParticleUpdater","_x6","_x7","_addPathGenerator","_args4","addPathGenerator","_x8","_x9","_addPlugin","_args5","addPlugin","_x10","_addPreset","_args6","addPreset","_x11","_x12","_addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realRefresh","realInit","realAfterEffect","realDestroy","_args7","afterEffect","addShapeDrawer","_x13","_x14","_x15","_x16","_x17","args","item","_load","tagIdOrOptionsOrParams","loadFromArray","_x18","_x19","_loadFromArray","optionsOrIndex","isNumber","_loadParams","_x20","_x21","_x22","_loadJSON","_callee10","tagId","pathConfigJson","_context10","_x23","_x24","_x25","_refresh2","_callee11","_args11","_context11","forEach","_set","_callee12","_context12","_x26","_x27","_x28","_x29","_setJSON","_callee13","_context13","_x30","_x31","_x32","_x33","addClickHandler","_loadParams2","_callee14","_params$id","_params$element","domContainer","currentOptions","oldIndex","old","existingCanvases","newItem","_context14","getElementById","body","append","v","domItem","tagName","toLowerCase","getElementsByTagName","appendChild","loadCanvas","_x34","_Range","_inherits","_super","_createSuper","call","pos1","pos2","distPos","r","sqrt","_range$size","Range","ExternalInteractorBase","ParticlesInteractorBase","w","h","size2","w2","h2","_Vector3d","xOrCoords","create","_updateFromAngle","cos","sin","coords3d","atan2","getLengthSq","clone","multTo","c","v3d"],"sourceRoot":""}